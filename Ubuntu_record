# Cross compile for aarch64 on x86_x64

sudo apt install binutils-aarch64-linux-gnu
sudo apt install gcc-aarch64-linux-gnu
sudo apt install g++-aarch64-linux-gnu

compile for aarch64
aarch64-linux-gnu-gcc CCTalkPortTest.cpp CCTalkPortTest.h -o CCTalkPortTest.out



======== make a so shared lib (iot800n ubuntu libIgnState.so) ========

sudo gcc -shared -fPIC -o libIgnState.so ignState.c ignState.h
sudo cp libIgnState.so /usr/local/lib/
sudo ldconfig

======== ignState.c ========
#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>

long parse_ign_vol(char* raw_vol) {
    long ign = strtol(raw_vol, NULL, 10);
    long radio = 36225;
    long ign_d, ign_f;
    ign = ign * radio;
    ign_d = (ign / 1000000) * 1000;
    ign_f = ign % 1000000;
    ign_f = ign_f / 1000;
    return ign;
}

long get_voltage_raw() {
    int fd = open("/sys/bus/iio/devices/iio:device0/in_voltage1_raw", O_RDONLY);
    if (fd < 0) {
        perror("Failed to open voltage file");
        return -1;
    }
    char buf[10];
    int num_read = read(fd, buf, sizeof(buf));
    if (num_read < 0) {
        perror("Failed to read voltage file");
        close(fd);
        return -1;
    }
    close(fd);
    //return atoi(buf);
    return parse_ign_vol(buf);
}
======== ignState.h ========
#ifndef IGNSTATE_H
#define IGNSTATE_H

int get_voltage_raw();

#endif

======== test the shared lib ========
make a test app
sudo gcc -o test.out test.c -L./lib -lIgnState

======== test.c ========
#include <stdio.h>
#include "ignState.h"

int main() {
    int voltage = get_voltage_raw();
    printf("get Voltage raw from test app: %d\n", voltage);
    return 0;
}


================ watchdog ================
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <fcntl.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <linux/types.h>
#include <linux/watchdog.h>

#define WDIOC_SETTIMEOUT        _IOWR(WATCHDOG_IOCTL_BASE, 6, int)
#define WDIOC_GETTIMEOUT        _IOR(WATCHDOG_IOCTL_BASE, 7, int)

int main(void)
{
    int timeout1 = 22;
    int timeout2;
    int fd = open("/dev/watchdog", O_WRONLY); //start watchdog
    int ret = 0;
    if (fd == -1) {
        perror("watchdog");
        exit(EXIT_FAILURE);
    }

    ret = ioctl(fd, WDIOC_SETTIMEOUT, &timeout1); //set timeout
    if (ret < 0)
        printf("ioctl WDIOC_SETTIMEOUT failed.\n"); 

    ret = ioctl(fd, WDIOC_GETTIMEOUT, &timeout2); //get timeout
    if (ret < 0)
        printf("ioctl WDIOC_SETTIMEOUT failed.\n"); 
    printf("timeout = %d\n", timeout2);

    while (1) {
        ret = write(fd, "\0", 1); //feed the dog
        if (ret != 1) {
            ret = -1;
            break;
        }
        printf("feed the dog\n");
        sleep(10);

    }
    close(fd);
    return ret;
}


# if windows cannot WinSCP or ssh to linux system, please check if openssh-server has been install or not
sudo apt-get install openssh-server




